namespace WebGL.Sample;

public static class MeshData
{
	public static VertexShaderInput[] TriangleVerts { get; } = new VertexShaderInput[]
	{
		new() { Vertex = new(+0.000000f, +0.000000f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.321500f, -0.114500f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.321500f, -0.088900f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.327197f, -0.089542f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.332607f, -0.091435f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.337461f, -0.094485f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.341515f, -0.098539f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.344565f, -0.103393f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.346458f, -0.108803f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.347100f, -0.114500f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.346458f, -0.120197f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.344565f, -0.125607f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.341515f, -0.130461f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.337461f, -0.134515f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.332607f, -0.137565f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.327197f, -0.139458f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.321500f, -0.140100f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.315803f, -0.139458f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.310393f, -0.137565f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.305539f, -0.134515f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.301485f, -0.130461f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.298435f, -0.125607f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.296542f, -0.120197f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.295900f, -0.114500f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.296542f, -0.108803f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.298435f, -0.103393f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.301485f, -0.098539f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.305539f, -0.094485f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.310393f, -0.091435f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.315803f, -0.089542f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.084537f, -0.134759f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.039000f, -0.134759f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.079000f, +0.124986f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.039000f, +0.124986f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.079000f, -0.076071f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.039000f, -0.076071f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.213938f, +0.069886f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.204804f, +0.124986f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.254687f, +0.069886f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.254687f, +0.124986f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.213938f, -0.134759f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(-0.254687f, -0.134759f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.017000f, -0.134759f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.059000f, -0.134759f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.017000f, +0.124986f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.059000f, +0.124986f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.017000f, +0.088318f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.059000f, +0.088318f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.017000f, +0.013816f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.059000f, +0.013816f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.017000f, -0.021262f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.059000f, -0.021262f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.017000f, -0.099082f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.059000f, -0.099082f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.153019f, +0.124986f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.153019f, +0.088318f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.157983f, -0.134759f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.157983f, -0.099082f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.145361f, +0.013816f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.145361f, -0.021262f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.246000f, +0.088809f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.288000f, +0.088809f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.246000f, +0.124986f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.288000f, +0.124986f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.246000f, -0.134759f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.288000f, -0.134759f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.360385f, +0.088809f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.360385f, +0.124986f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.173302f, +0.088809f), Color = new(1f, 1f, 1f) },
		new() { Vertex = new(+0.173302f, +0.124986f), Color = new(1f, 1f, 1f) },
	};
	public static ushort[] TriangleIndices { get; } = new ushort[]
	{
		// triangles in the dot
		1, 2, 3,
		1, 3, 4,
		1, 4, 5,
		1, 5, 6,
		1, 6, 7,
		1, 7, 8,
		1, 8, 9,
		1, 9, 10,
		1, 10, 11,
		1, 11, 12,
		1, 12, 13,
		1, 13, 14,
		1, 14, 15,
		1, 15, 16,
		1, 16, 17,
		1, 17, 18,
		1, 18, 19,
		1, 19, 20,
		1, 20, 21,
		1, 21, 22,
		1, 22, 23,
		1, 23, 24,
		1, 24, 25,
		1, 25, 26,
		1, 26, 27,
		1, 27, 28,
		1, 28, 29,
		1, 29, 2,

		// quads in letters
		34, 35, 33, 34, 33, 32,
		30, 31, 35, 30, 35, 34,
		30, 34, 37, 30, 37, 36,
		36, 37, 39, 36, 39, 38,
		36, 38, 41, 36, 41, 40,
		46, 47, 45, 46, 45, 44,
		48, 49, 47, 48, 47, 46,
		50, 51, 49, 50, 49, 48,
		52, 53, 51, 52, 51, 50,
		42, 43, 53, 42, 53, 52,
		45, 47, 55, 45, 55, 54,
		53, 43, 56, 53, 56, 57,
		49, 51, 59, 49, 59, 58,
		60, 61, 63, 60, 63, 62,
		61, 60, 64, 61, 64, 65,
		63, 61, 66, 63, 66, 67,
		60, 62, 69, 60, 69, 68,
	};
}
